task: 'if_nerf'
gpus: [0]

#train_dataset_module: 'lib.datasets.light_stage.can_smpl_perform'
#train_dataset_path: 'lib/datasets/light_stage/can_smpl_perform.py'
#test_dataset_module: 'lib.datasets.light_stage.can_smpl_perform'
#test_dataset_path: 'lib/datasets/light_stage/can_smpl_perform.py'

train_dataset_module: 'lib.datasets.light_stage.can_smpl'
train_dataset_path: 'lib/datasets/light_stage/can_smpl.py'
test_dataset_module: 'lib.datasets.light_stage.can_smpl_refine'
test_dataset_path: 'lib/datasets/light_stage/can_smpl_refine.py'

network_module: 'lib.networks.latent_xyzc'
network_path: 'lib/networks/latent_xyzc.py'

cross_transformer_network_module: 'lib.networks.cross_transformer'
cross_transformer_network_path: 'lib/networks/cross_transformer.py'

#renderer_module: 'lib.networks.renderer.if_clight_renderer_mmsk'
#renderer_path: 'lib/networks/renderer/if_clight_renderer_mmsk.py'

renderer_module: 'lib.networks.renderer.if_clight_renderer'
renderer_path: 'lib/networks/renderer/if_clight_renderer.py'

trainer_module: 'lib.train.trainers.if_nerf_clight'
trainer_path: 'lib/train/trainers/if_nerf_clight.py'

evaluator_module: 'lib.evaluators.if_nerf'
evaluator_path: 'lib/evaluators/if_nerf.py'

visualizer_module: 'lib.visualizers.if_nerf_perform'
visualizer_path: 'lib/visualizers/if_nerf_perform.py'

refiner_module: 'lib.refiners.if_nerf'
refiner_path: 'lib/refiners/if_nerf.py'

# generalization configuration
virt_data_root: 'data/zju_mocap'
rasterize_root: 'data/zju_rasterization'
time_steps: 3
use_mps_net: True
use_apex: False
use_prefetcher: True        # 分线程读取数据
use_nerf_atten: False        # 把nerf网络由MLP改为transformer结构
use_densepose: False        # 使用densepose的uvmap和semantic作为模态信息
add_fc: False   # 这里因为在第一次训练mps-net的时候多加了两个没有用到的线性层，因此在load时需要设置为True
time_mult: [0,-20,20]
use_viz_test: True
use_fg_masking: False
rasterize: True
weight: 'cross_transformer'
cross_att_mode: 'cross_att'
no_residue_cross_att: False

jitter: False
random_intv: False
test_sample_cam: False
exp_folder_name: 'debug'

run_mode: 'test' # code running mode: 'train' 'test'
test_mode: 'model_x_motion_x' # 'model_o_motion_o', 'model_o_motion_x', 'model_x_motion_o', 'model_x_motion_x'

human: 392
num_alpha_res: 1
pretrained: True # encoder pretrained or not

img_feat_size: 256
embed_size: 64
save_freq: 100

train:
    dataset: Human392_0001_Train
    batch_size: 1
    collator: ''
    lr: 5e-4
    weight_decay: 0
    epoch: 500
    scheduler:
        type: 'exponential'
        gamma: 0.1
        decay_epochs: 1000
    num_workers: 16 #16

test:
    dataset: Human392_0001_Test
    batch_size: 1
    collator: ''
    epoch: -1 # -1 means latest

ep_iter: 500
save_ep: 1000
eval_ep: 1000

# training options
netdepth: 8
netwidth: 256
netdepth_fine: 8
netwidth_fine: 256
netchunk: 65536
chunk: 32768

no_batching: True

precrop_iters: 500
precrop_frac: 0.5

# network options
point_feature: 6

# rendering options
use_viewdirs: True
i_embed: 0
xyz_res: 10
view_res: 4
raw_noise_std: 0

N_samples: 64
N_importance: 128
N_rand: 1024

near: 1
far: 3

perturb: 1
white_bkgd: False

render_views: 100

# data options
res: 256
ratio: 0.32
test_input_view: [0,7,15]
intv: 6
ni: 300
smpl: 'smpl'
vertices: 'refine_vertices'
params: 'refine_params'

voxel_size: [0.005, 0.005, 0.005]  # dhw

# record options
log_interval: 1